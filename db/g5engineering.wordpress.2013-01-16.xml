<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.1.3" created="2013-01-16 18:32" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>G5 Engineering</title>
	<link>http://engineering.g5platform.com</link>
	<description></description>
	<pubDate>Wed, 16 Jan 2013 18:32:47 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://engineering.g5platform.com</wp:base_site_url>
	<wp:base_blog_url>http://engineering.g5platform.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>engineering@g5searchmarketing.com</wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>CobyR</wp:author_login><wp:author_email>coby.randquist@g5platform.com</wp:author_email><wp:author_display_name><![CDATA[CobyR]]></wp:author_display_name><wp:author_first_name><![CDATA[Coby]]></wp:author_first_name><wp:author_last_name><![CDATA[Randquist]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>3</wp:author_id><wp:author_login>amerine</wp:author_login><wp:author_email>mark.turner@g5platform.com</wp:author_email><wp:author_display_name><![CDATA[Mark Turner]]></wp:author_display_name><wp:author_first_name><![CDATA[Mark]]></wp:author_first_name><wp:author_last_name><![CDATA[Turner]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>6</wp:author_id><wp:author_login>steveburkett</wp:author_login><wp:author_email>steve.burkett@g5platform.com</wp:author_email><wp:author_display_name><![CDATA[steve burkett]]></wp:author_display_name><wp:author_first_name><![CDATA[steve]]></wp:author_first_name><wp:author_last_name><![CDATA[burkett]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>7</wp:author_id><wp:author_login>msisk</wp:author_login><wp:author_email>mike.sisk@g5platform.com</wp:author_email><wp:author_display_name><![CDATA[Mike Sisk]]></wp:author_display_name><wp:author_first_name><![CDATA[Mike]]></wp:author_first_name><wp:author_last_name><![CDATA[Sisk]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.1.3</generator>

	<item>
		<title>Welcome!</title>
		<link>http://engineering.g5platform.com/?p=6</link>
		<pubDate>Thu, 06 Jan 2011 05:57:04 +0000</pubDate>
		<dc:creator>CobyR</dc:creator>
		<guid isPermaLink="false">http://engineering.g5platform.com/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[The G5 Engineering blog is our way of creating a common outlet for some of our engineering talent to express themselves.  Preferably on topics that would be of some what general interest to our larger technology community, but not always.

We’ll be adding a Team Page identifying who exactly it is that makes up the G5 Engineering team, as well as a list of our open source projects and contributions.

Looking forward to making this a valuable tool for us as well as the tech community at large.

Thanks for tuning in.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2011-01-05 21:57:04</wp:post_date>
		<wp:post_date_gmt>2011-01-06 05:57:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>welcome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mongodump</title>
		<link>http://engineering.g5platform.com/?p=22</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>steveburkett</dc:creator>
		<guid isPermaLink="false">http://engineering.g5platform.com/?p=22</guid>
		<description></description>
		<content:encoded><![CDATA[a few thoughts on mongodump

if you dump a specific collection (e.g., mongodump -d mydb -c mycol) it will not dump indexes for that collection.  You have to rebuild the indexes when you restore.   OR, dump the entire database.

if you add a query to mongodump (e.g., mongodump -d mydb -c mycol -q "a json query", it takes an order of magnitude longer than a dump without a query.   good to consider.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2011-01-06 15:39:13</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="gts"><![CDATA[GTS]]></category>
		<category domain="post_tag" nicename="mongo"><![CDATA[mongo]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Some vi tips</title>
		<link>http://engineering.g5platform.com/?p=35</link>
		<pubDate>Fri, 11 Feb 2011 06:12:23 +0000</pubDate>
		<dc:creator>msisk</dc:creator>
		<guid isPermaLink="false">http://engineering.g5platform.com/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today I got hit with a last-minute request to update our Nginx redirect map with data provided in a Google docs spreadsheet. Normally I only have to do one or two redirect rules at a time. But today I got hit with 120 rules – each of which needed data from two cells in the spreadsheet. Doing it manually would require 240 cut-n-paste operations – not fun and error prone. Oh, and I only had 30-minutes to get this done and up in production.</p>

<p>We do these sorts of redirects when a customer changes their domain name. In this particular case the customer had a number of locations under one domain and they're now splitting each location out into its own domain. But we don't want visitors to the sites getting 404s due to the URL changing so we put in redirect rules to rewrite the request and forward the visitor to the new domain.</p>

<p>There's a bunch of ways to do this, but this is how I did it.</p>

<p>First, a quick explanation of the Nginx redirect map format. There's not much to it:</p>

<pre><code>old.example.com    new.example.com;
</code></pre>

<p>That's the old URL, a space or spaces (or tab), the new URL and a semicolon terminating the line.</p>

<p>In this case, each row of the spreadsheet with the redirect data had 7 columns: the name of the property being redirected, and three URLs that needed to be redirected with the destination (i.e. Each location in this case only has three pages so there's only three redirects each). Luckily the order of the data is just what I needed for the map.</p>

<p>The first thing I did was a CSV export of the data and opened it up in vi.</p>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/1.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/1.png" alt="" title="1" width="665" height="485" class="alignnone size-full wp-image-36" /></a>
</p>

<p>The CSV export contained title information for the columns I don't need so let's just delete those right off.</p>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/2.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/2.png" alt="" title="2" width="665" height="485" class="alignnone size-full wp-image-37" /></a>
</p>

<p>Ok, now the data is ready to be processed into something I can use. In another stroke of luck we can see each redirect pair is separated by two commas since the spreadsheet contained an empty column between the three pairs for each location. This will make things much easier.</p>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/3.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/3.png" alt="" title="3" width="665" height="485" class="alignnone size-full wp-image-38" /></a>
</p>

<p>First, let's get each redirect on its own line in the file. We can search and replace for the domain name to be redirected since they're all the same. We'll search for the domain and replace it as the first thing on its own line with:</p>

<pre><code>:%s:www.myfavoriteapartment.com:\rwww.myfavoriteapartment.com:g
</code></pre>

<p>The <code>%</code> does all lines in the file; the <code>s</code> is for search; the <code>\r</code> is vi-speak for newline; and the <code>g</code> at the end is for global so it'll process the whole line rather than the first match it finds on that line. By habit I use <code>:</code> for the separator in the search and replace command; you can also (and most people do) use <code>/</code>.</p>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/4.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/4.png" alt="" title="4" width="700" height="530" class="alignnone size-full wp-image-39" /></a></p>

<p>Ok, we're getting there. Next let's get rid of the double commas and – since that's always at the end of the redirect destination – put a semicolon at the end as Nginx requires:</p>

<pre><code>:%s:,,:;:g
</code></pre>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/5.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/5.png" alt="" title="5" width="700" height="530" class="alignnone size-full wp-image-40" /></a></p>

<p>Now we need to deal with the first column of data from the spreadsheet – the name of the location. We don't need this information for the map file so let's just delete it. Each location name is on its own line at this point and ends with a comma. So let's search for lines ending with a comma and delete 'em:</p>

<pre><code>:g:,$:d
</code></pre>

<p>In this case, the <code>g</code> is for a global operation on all lines; the <code>,$</code> matches all lines with a <code>,</code> at the end of a line (the <code>$</code>); and the <code>d</code> is for delete.</p>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/6.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/6.png" alt="" title="6" width="700" height="530" class="alignnone size-full wp-image-41" /></a></p>

<p>All we have left is to replace the single remaining comma on each line that separates the source and destination URLs. Nginx requires that the separation here be one or more spaces. I typically use a tab (although I probably shouldn't – it makes the map file look messy) so let's do this:</p>

<pre><code>:%s:,:^I:g
</code></pre>

<p>The <code>^I</code> is the tab character. Nowadays you can usually just press the tab key and vi will put in the <code>^I</code>, but in the old days you had to do <strong>control-v</strong> and <strong>control-i</strong>
to get a tab.</p>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/7.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/7.png" alt="" title="7" width="700" height="530" class="alignnone size-full wp-image-42" /></a></p>

<p>And that's it.</p>

<p><a href="http://engineering.g5platform.com/wp-content/uploads/2011/02/8.png"><img src="http://engineering.g5platform.com/wp-content/uploads/2011/02/8.png" alt="" title="8" width="700" height="530" class="alignnone size-full wp-image-43" /></a></p>

<p>Now all we got to do is save the file and do a copy and paste of its contents into the map file on our production configuration. Of course, you'll want to scroll through the file and make sure it looks correct and do a <strong>nginx configtest</strong> before <strong>nginx reload</strong> to make sure it's valid.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[Today I got hit with a last-minute request to update our Nginx redirect map with data provided in a Google docs spreadsheet. Normally I only have to do one or two redirect rules at a time. But today I got hit with 120 rules – each of which needed data from two cells in the spreadsheet. Doing it manually would require 240 cut-n-paste operations – not fun and error prone. Oh, and I only had 30-minutes to get this done and up in production.]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2011-02-10 22:12:23</wp:post_date>
		<wp:post_date_gmt>2011-02-11 06:12:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-vi-tips</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unixlinux"><![CDATA[Unix/Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Jody]]></wp:comment_author>
			<wp:comment_author_email>jody.odonnell@g5platform.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.39.169.74</wp:comment_author_IP>
			<wp:comment_date>2011-02-11 13:25:12</wp:comment_date>
			<wp:comment_date_gmt>2011-02-11 21:25:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[LOVE the vi.  Emacs causes infertility and cancer.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ruby on Ales 2011</title>
		<link>http://engineering.g5platform.com/?p=64</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>CobyR</dc:creator>
		<guid isPermaLink="false">http://engineering.g5platform.com/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[Ruby on Ales]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2011-06-14 16:38:51</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>An Upgrade Story</title>
		<link>http://engineering.g5platform.com/?p=67</link>
		<pubDate>Sun, 10 Jul 2011 07:51:45 +0000</pubDate>
		<dc:creator>amerine</dc:creator>
		<guid isPermaLink="false">http://engineering.g5platform.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[Our own <a href="http://amerine.net">Mark Turner</a> (<a href="http://twitter.com/amerine">@amerine</a>) and Tim Linquist (<a href="http://twitter.com/tim_linquist">@tim_linquist</a>) discussed a major upgrade of the <a href="http://www.G5Platform.com">G5 Platform</a> at the June 2011 <a href="http://cowpu.com">COWPU</a> (Central Oregon Web Professionals User Group) Meeting.

<iframe src="http://player.vimeo.com/video/26220027?title=0&amp;byline=0&amp;portrait=0" width="601" height="338" frameborder="0"></iframe><p><a href="http://vimeo.com/26220027">COWPU - June 2011 - An Upgrade Story</a> from <a href="http://vimeo.com/cowpu">COWPU</a> on <a href="http://vimeo.com">Vimeo</a>.</p>

Watch it directly on Vimeo here: <a href="http://vimeo.com/cowpu/june-2011-an-upgrade-story">http://vimeo.com/cowpu/june-2011-an-upgrade-story</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2011-07-09 23:51:45</wp:post_date>
		<wp:post_date_gmt>2011-07-10 07:51:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>an-upgrade-story</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="talks"><![CDATA[Talks]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
